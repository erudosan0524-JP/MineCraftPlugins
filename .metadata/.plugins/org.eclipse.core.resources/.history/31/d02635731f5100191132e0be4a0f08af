package com.github.erudosan0524.jp.ewhitelist;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;

import org.bukkit.ChatColor;
import org.bukkit.OfflinePlayer;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.plugin.java.JavaPlugin;

public class CommandManager implements CommandExecutor {

	JavaPlugin plg;

	public CommandManager(JavaPlugin plg) {
		this.plg = plg;
	}

	@Override
	public boolean onCommand(CommandSender sender, Command cmd, String arg, String[] args) {
		if(!(sender instanceof Player)) {
			return true;
		}

		Player player = (Player) sender;

		if(args.length != 0) {
			if(args[0].equalsIgnoreCase("addall")) {
				List<String> datas = loadFile(new File(plg.getDataFolder() + "\\IDlist.yml"));
				for(String s : datas) {
					Player p_ = plg.getServer().getPlayer(s);

					if(p_ == null) {
						continue;
					}

					if(p_.isWhitelisted()) {
						continue;
					}

					plg.getServer().dispatchCommand(plg.getServer().getConsoleSender(), "whitelist add " + p_.getName());
				}
				EWhitelist.sendMessage(player, "ファイル内のすべてのプレイヤーをホワイトリストに追加しました");
				return true;

			}else if(args[0].equalsIgnoreCase("removeall")){
				for(OfflinePlayer p_ : plg.getServer().getWhitelistedPlayers()) {
					plg.getServer().dispatchCommand(plg.getServer().getConsoleSender(), "whitelist remove " + p_.getName());
				}

				EWhitelist.sendMessage(player, "ファイル内のすべてのプレイヤーをホワイトリストから削除しました");
				return true;

			}else if(args[0].equalsIgnoreCase("list")) {
				player.sendMessage(ChatColor.YELLOW + "===ホワイトリスト一覧===");

				for(OfflinePlayer p : plg.getServer().getWhitelistedPlayers()) {
					player.sendMessage("・ " + p.getName());
				}

				return true;
			}else if(args[0].equalsIgnoreCase("add")) {
				if(args[1].length() != 0) {
					Player p_ = null;
					try {
						p_ = plg.getServer().getPlayer(args[1]);
					}catch(NullPointerException e) {
						EWhitelist.sendMessage(player, p_.getName() + "というプレイヤーは存在しません");
						return true;
					}

					p_.setWhitelisted(true);
					EWhitelist.sendMessage(player, p_.getName() + "をホワイトリストに追加しました");
				} else {
					EWhitelist.sendMessage(player,"プレイヤーを指定してください");
					return true;
				}
			}else if(args[0].equalsIgnoreCase("remove")) {
				if(args[1].length() != 0) {
					Player p_ = null;
					try {
						p_ = plg.getServer().getPlayer(args[1]);
					}catch(NullPointerException e) {
						EWhitelist.sendMessage(player, p_.getName() + "というプレイヤーは存在しません");
						return true;
					}

					p_.setWhitelisted(false);
					EWhitelist.sendMessage(player, p_.getName() + "をホワイトリストから削除しました");
					return true;
				} else {
					EWhitelist.sendMessage(player, "プレイヤーを指定してください");
					return true;
				}
			}
		}
		return false;
	}

	private List<String> loadFile(File file) {
		try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8));){
		    String str;
		    List<String> lines = new ArrayList<>();
		    while ((str = reader.readLine()) != null) {
		        lines.add(str);
		    }
		    return lines;
		} catch (IOException e) {
		    e.printStackTrace();
		}

		return null;
	}

}
